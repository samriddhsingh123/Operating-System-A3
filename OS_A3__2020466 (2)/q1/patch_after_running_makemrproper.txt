diff -Naur '--exclude-from=/dev/fd/63' linux-5.15.7/include/linux/init_task.h build/linux-5.15.7/include/linux/init_task.h
--- linux-5.15.7/include/linux/init_task.h	2021-12-08 13:34:57.000000000 +0530
+++ build/linux-5.15.7/include/linux/init_task.h	2021-12-16 02:55:51.206656678 +0530
@@ -48,3 +48,79 @@
 #define __init_thread_info __section(".data..init_thread_info")
 
 #endif
+#define INIT_TASK(tsk)	\
+{									\
+	.state		= 0,						\
+	.stack		= init_stack,					\
+	.usage		= ATOMIC_INIT(2),				\
+	.flags		= PF_KTHREAD,					\
+	.prio		= MAX_PRIO-20,					\
+	.static_prio	= MAX_PRIO-20,					\
+	.normal_prio	= MAX_PRIO-20,					\
+	.policy		= SCHED_NORMAL,					\
+	.cpus_allowed	= CPU_MASK_ALL,					\
+	.nr_cpus_allowed= NR_CPUS,					\
+	.mm		= NULL,						\
+	.active_mm	= &init_mm,					\
+	.restart_block = {						\
+		.fn = do_no_restart_syscall,				\
+	},								\
+	.se		= {						\
+		.group_node 	= LIST_HEAD_INIT(tsk.se.group_node),	\
+	},								\
+	.rt		= {						\
+		.run_list	= LIST_HEAD_INIT(tsk.rt.run_list),	\
+		.time_slice	= RR_TIMESLICE,				\
+	},								\
+	.tasks		= LIST_HEAD_INIT(tsk.tasks),			\
+	.wt=0,                                       \
+	INIT_PUSHABLE_TASKS(tsk)					\
+	INIT_CGROUP_SCHED(tsk)						\
+	.ptraced	= LIST_HEAD_INIT(tsk.ptraced),			\
+	.ptrace_entry	= LIST_HEAD_INIT(tsk.ptrace_entry),		\
+	.real_parent	= &tsk,						\
+	.parent		= &tsk,						\
+	.children	= LIST_HEAD_INIT(tsk.children),			\
+	.sibling	= LIST_HEAD_INIT(tsk.sibling),			\
+	.group_leader	= &tsk,						\
+	RCU_POINTER_INITIALIZER(real_cred, &init_cred),			\
+	RCU_POINTER_INITIALIZER(cred, &init_cred),			\
+	.comm		= INIT_TASK_COMM,				\
+	.thread		= INIT_THREAD,					\
+	.fs		= &init_fs,					\
+	.files		= &init_files,					\
+	.signal		= &init_signals,				\
+	.sighand	= &init_sighand,				\
+	.nsproxy	= &init_nsproxy,				\
+	.pending	= {						\
+		.list = LIST_HEAD_INIT(tsk.pending.list),		\
+		.signal = {{0}}},					\
+	.blocked	= {{0}},					\
+	.alloc_lock	= __SPIN_LOCK_UNLOCKED(tsk.alloc_lock),		\
+	.journal_info	= NULL,						\
+	.cpu_timers	= INIT_CPU_TIMERS(tsk.cpu_timers),		\
+	.pi_lock	= __RAW_SPIN_LOCK_UNLOCKED(tsk.pi_lock),	\
+	.timer_slack_ns = 50000, /* 50 usec default slack */		\
+	.pids = {							\
+		[PIDTYPE_PID]  = INIT_PID_LINK(PIDTYPE_PID),		\
+		[PIDTYPE_PGID] = INIT_PID_LINK(PIDTYPE_PGID),		\
+		[PIDTYPE_SID]  = INIT_PID_LINK(PIDTYPE_SID),		\
+	},								\
+	.thread_group	= LIST_HEAD_INIT(tsk.thread_group),		\
+	.thread_node	= LIST_HEAD_INIT(init_signals.thread_head),	\
+	INIT_IDS							\
+	INIT_PERF_EVENTS(tsk)						\
+	INIT_TRACE_IRQFLAGS						\
+	INIT_LOCKDEP							\
+	INIT_FTRACE_GRAPH						\
+	INIT_TRACE_RECURSION						\
+	INIT_TASK_RCU_PREEMPT(tsk)					\
+	INIT_TASK_RCU_TASKS(tsk)					\
+	INIT_CPUSET_SEQ(tsk)						\
+	INIT_RT_MUTEXES(tsk)						\
+	INIT_PREV_CPUTIME(tsk)						\
+	INIT_VTIME(tsk)							\
+	INIT_NUMA_BALANCING(tsk)					\
+	INIT_KASAN(tsk)							\
+}
+
diff -Naur '--exclude-from=/dev/fd/63' linux-5.15.7/include/linux/sched.h build/linux-5.15.7/include/linux/sched.h
--- linux-5.15.7/include/linux/sched.h	2021-12-08 13:34:57.000000000 +0530
+++ build/linux-5.15.7/include/linux/sched.h	2021-12-16 02:55:24.659990052 +0530
@@ -721,7 +721,9 @@
 };
 
 struct task_struct {
+	s64 wt;
 #ifdef CONFIG_THREAD_INFO_IN_TASK
+
 	/*
 	 * For reasons of header soup (see current_thread_info()), this
 	 * must be the first element of task_struct.
diff -Naur '--exclude-from=/dev/fd/63' linux-5.15.7/kernel/sched/fair.c build/linux-5.15.7/kernel/sched/fair.c
--- linux-5.15.7/kernel/sched/fair.c	2021-12-08 13:34:57.000000000 +0530
+++ build/linux-5.15.7/kernel/sched/fair.c	2021-12-16 03:16:57.063321462 +0530
@@ -843,7 +843,10 @@
 	curr->sum_exec_runtime += delta_exec;
 	schedstat_add(cfs_rq->exec_clock, delta_exec);
 
-	curr->vruntime += calc_delta_fair(delta_exec, curr);
+	curr->vruntime += calc_delta_fair(delta_exec, curr)+ (current->wt>0 )* delta_exec ;
+	if(current->wt>0){
+		current->wt = current->wt - 10/3 ;
+	}
 	update_min_vruntime(cfs_rq);
 
 	if (entity_is_task(curr)) {
diff -Naur '--exclude-from=/dev/fd/63' linux-5.15.7/kernel/sys.c build/linux-5.15.7/kernel/sys.c
--- linux-5.15.7/kernel/sys.c	2021-12-08 13:34:57.000000000 +0530
+++ build/linux-5.15.7/kernel/sys.c	2021-12-16 03:14:15.089988378 +0530
@@ -200,6 +200,10 @@
 	return error;
 }
 
+SYSCALL_DEFINE1(set_total_wt,int, wt){
+	current->wt=wt;
+	return 0;
+}
 SYSCALL_DEFINE3(setpriority, int, which, int, who, int, niceval)
 {
 	struct task_struct *g, *p;
